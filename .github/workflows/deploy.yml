name: Deploy

on:
  workflow_run:
    workflows: [ "CI" ]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: outsider-deploy-test
          IMAGE_TAG: ${{ github.sha }}
        with:
          push: true
          tags: '${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}'
      - run: echo $IMAGE > image.txt
        env:
          IMAGE: ${{ steps.login-ecr.outputs.registry }}/outsider-deploy-test:${{ github.sha }}
      - name: Upload image tag
        uses: actions/upload-artifact@v3
        with:
          name: image
          path: image.txt

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: prod

    steps:
      - run: echo 'deployemnt'
      - name: Download image tag
        uses: actions/download-artifact@v3
        with:
          name: image
      - run: echo "image=$(cat image.txt)" >> $GITHUB_OUTPUT
        id: get_image
      - run: echo ${{ steps.get_image.outputs.image }}
      - uses: fdiesel/github-action-deploy-aws-lightsail-container@version
        with:
          image-name: deploy-test
          image: ${{ steps.get_image.outputs.image }}
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-access-key: ${{ secrets.AWS_ACCESS_KEY }}
          aws-lightsail-service: deploy-test
          aws-lightsail-clear-images: false

